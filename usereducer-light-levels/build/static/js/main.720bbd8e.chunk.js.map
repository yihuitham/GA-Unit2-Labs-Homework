{"version":3,"sources":["lightData.js","contexts/lightContext.js","Components/Controls.js","Components/Light.js","Components/App.js","index.js"],"names":["lightData","name","color","LightContext","createContext","_useReducer","useReducer","state","action","_useReducer2","Object","slicedToArray","lightState","dispatch","useLightContext","useContext","LightProvider","_ref","children","react_default","a","createElement","Provider","value","Controls","props","_useLightContext","_useLightContext2","lightButtons","controls","map","d","i","key","onClick","Fragment","className","Lights","styles","width","height","borderRadius","border","background","style","App","Components_Controls","Light","rootElement","document","getElementById","ReactDOM","render","Components_App"],"mappings":"gKAOeA,EAAA,CACb,CAACC,KAAM,MAAOC,MAAO,iBACrB,CAACD,KAAM,MAAOC,MAAO,kBACrB,CAACD,KAAM,MAAOC,MAAO,kBACrB,CAACD,KAAM,OAAQC,MAAO,mBCRlBC,EAAeC,0BAiBrBC,EAA+BC,qBAfV,SAACC,EAAOC,GAC3B,OAAQA,GACN,IAAK,MACH,OAAOR,EAAU,GACnB,IAAK,MACH,OAAOA,EAAU,GACnB,IAAK,SACH,OAAOA,EAAU,GACnB,IAAK,OACH,OAAOA,EAAU,GACnB,QACE,OAAOA,EAAU,KAIiCA,EAAU,IAAlES,EAAAC,OAAAC,EAAA,EAAAD,CAAAL,EAAA,GAAOO,EAAPH,EAAA,GAAmBI,EAAnBJ,EAAA,GAEA,SAASK,IACP,OAAOC,qBAAWZ,GAGpB,SAASa,EAATC,GAAqC,IAAZC,EAAYD,EAAZC,SACvB,OACEC,EAAAC,EAAAC,cAAClB,EAAamB,SAAd,CAAuBC,MAAO,CAACX,EAAYC,IACxCK,GCRQM,MAlBf,SAAkBC,GAChB,IAAAC,EAA+BZ,IAA/Ba,EAAAjB,OAAAC,EAAA,EAAAD,CAAAgB,EAAA,GAAmBb,GAAnBc,EAAA,GAAAA,EAAA,IAEMC,EAAeH,EAAMI,SAASC,IAAI,SAACC,EAAGC,GAC1C,OACEb,EAAAC,EAAAC,cAAA,UAAQY,IAAKD,EAAGE,QAAS,kBAAMrB,EAASkB,KACrCA,KAKP,OACEZ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAe,SAAA,KACEhB,EAAAC,EAAAC,cAAA,OAAKe,UAAU,YAAYR,KCAlBS,MAbf,WACE,IAAAX,EAA+BZ,IAA/Ba,EAAAjB,OAAAC,EAAA,EAAAD,CAAAgB,EAAA,GAAOd,EAAPe,EAAA,GACMW,GADNX,EAAA,GACe,CACbY,MAAO,QACPC,OAAQ,QACRC,aAAc,MACdC,OAAQ,YACRC,WAAY/B,EAAWV,QAGzB,OAAOiB,EAAAC,EAAAC,cAAA,OAAKuB,MAAON,KCKNO,MAbf,WAGE,OACE1B,EAAAC,EAAAC,cAAA,OAAKe,UAAU,OACbjB,EAAAC,EAAAC,cAACL,EAAD,KACEG,EAAAC,EAAAC,cAACyB,EAAD,CAAUjB,SALC,CAAC,MAAO,MAAO,SAAU,UAMpCV,EAAAC,EAAAC,cAAC0B,EAAD,SCNFC,SAAcC,SAASC,eAAe,SAC5CC,IAASC,OAAOjC,EAAAC,EAAAC,cAACgC,EAAD,MAASL","file":"static/js/main.720bbd8e.chunk.js","sourcesContent":["// Here is a list of rgba colors you could uses\n//    'off' - 'rgba(0,0,0,1)'\n//    'low' - 'rgba(0,0,0,.6)'\n//    'medium' - 'rgba(0,0,0,.3)'\n//    'high' - 'rgba(0,0,0,.1)'\n// */\n\nexport default [\n  {name: 'off', color: 'rgba(0,0,0,1)'},\n  {name: 'low', color: 'rgba(0,0,0,.6)'},\n  {name: 'med', color: 'rgba(0,0,0,.4)'},\n  {name: 'high', color: 'rgba(0,0,0,.1)'},\n]","import React, { createContext, useContext, useReducer } from \"react\";\nimport lightData from \"../lightData\";\n\nconst LightContext = createContext();\n\nconst lightReducer = (state, action) => {\n  switch (action) {\n    case \"off\":\n      return lightData[0];\n    case \"low\":\n      return lightData[1];\n    case \"medium\":\n      return lightData[2];\n    case \"high\":\n      return lightData[3];\n    default:\n      return lightData[0];\n  }\n};\n\nconst [lightState, dispatch] = useReducer(lightReducer, lightData[0]);\n\nfunction useLightContext() {\n  return useContext(LightContext);\n}\n\nfunction LightProvider({ children }) {\n  return (\n    <LightContext.Provider value={[lightState, dispatch]}>\n      {children}\n    </LightContext.Provider>\n  );\n}\n\nexport { LightProvider, useLightContext };\n","import React from \"react\";\nimport { useLightContext } from \"../contexts/lightContext\";\n\nfunction Controls(props) {\n  const [lightState, dispatch] = useLightContext();\n\n  const lightButtons = props.controls.map((d, i) => {\n    return (\n      <button key={i} onClick={() => dispatch(d)}>\n        {d}\n      </button>\n    );\n  });\n\n  return (\n    <>\n      <div className=\"controls\">{lightButtons}</div>\n    </>\n  );\n}\n\nexport default Controls;\n","import React from \"react\";\nimport { useLightContext } from \"../contexts/lightContext\";\n\nfunction Lights() {\n  const [lightState, dispatch] = useLightContext();\n  const styles = {\n    width: \"100px\",\n    height: \"100px\",\n    borderRadius: \"50%\",\n    border: \"1px solid\",\n    background: lightState.color,\n  };\n\n  return <div style={styles}></div>;\n}\n\nexport default Lights;\n","import React from \"react\";\nimport { LightProvider } from \"../contexts/lightContext\";\nimport Controls from \"./Controls\";\nimport Light from \"./Light\";\n\nfunction App() {\n  const controls = [\"off\", \"low\", \"medium\", \"high\"];\n\n  return (\n    <div className=\"App\">\n      <LightProvider>\n        <Controls controls={controls} />\n        <Light />\n      </LightProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from './Components/App'\n\nimport \"./styles.css\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n\n\n/* INSTRUCTIONS\n1. Fork the codesandbox\n2. Import and use useReducer in App. It should replace\n   the if statements and control state\n3. Make a Controls Component that has 4 buttons\n   â€“ off, low, medium, high\n4. Make the Light Component that will show 4 diff \n  shades of black based on which control button was clicked\n\nHere is a list of rgba colors you could uses\n   'off' - 'rgba(0,0,0,1)'\n   'low' - 'rgba(0,0,0,.6)'\n   'medium' - 'rgba(0,0,0,.3)'\n   'high' - 'rgba(0,0,0,.1)'\n*/"],"sourceRoot":""}