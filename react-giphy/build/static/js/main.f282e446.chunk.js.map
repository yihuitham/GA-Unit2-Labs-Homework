{"version":3,"sources":["App.jsx","reportWebVitals.js","index.js"],"names":["App","useState","gif","setGif","search","setSearch","apiKey","randomGifUrl","generateRandom","fetch","then","response","json","myJson","console","log","data","images","original","url","useEffect","className","onSubmit","e","preventDefault","keyword","newSearchUrl","name","type","value","placeholder","onChange","event","target","onClick","src","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iLAuEeA,MArEf,WACE,MAAsBC,mBAAS,IAA/B,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACMC,EAAS,mCACTC,EAAY,uDAAmDD,EAAnD,kBAMZE,EAAiB,WACrBC,MAAMF,GACHG,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAACG,GACLC,QAAQC,IAAIF,GACZV,EAAOU,EAAOG,KAAKC,OAAOC,SAASC,SA2BzC,OAvBAC,qBAAU,WACRZ,MACC,IAsBD,sBAAKa,UAAU,MAAf,UACE,uCACA,uBAAMC,SAjBW,SAACC,GACpBA,EAAEC,iBACFV,QAAQC,IAAIX,GACZ,IA3BoBqB,EA2BdC,GA3BcD,EA2BcrB,EA1B5B,gDAAN,OAAuDE,EAAvD,cAAmEmB,EAAnE,2CA2BAX,QAAQC,IAAIW,GACZjB,MAAMiB,GACHhB,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAACG,GACLV,EAAOU,EAAOG,KAAK,GAAGC,OAAOC,SAASC,SAOxC,UACE,uBACEQ,KAAK,SACLC,KAAK,OACLC,MAAOzB,EACP0B,YAAY,aACZC,SA5Ba,SAACC,GACpB3B,EAAU2B,EAAMC,OAAOJ,OACvBf,QAAQC,IAAIX,MA4BR,uBAAOuB,KAAK,SAASC,KAAK,cAE5B,uBACED,KAAK,eACLC,KAAK,SACLC,MAAM,aACNK,QAAS1B,IAEX,uBACA,qBAAK2B,IAAKjC,EAAKkC,IAAI,SCtDVC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB7B,MAAK,YAAkD,IAA/C8B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.f282e446.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\n\nfunction App() {\n  const [gif, setGif] = useState(\"\");\n  const [search, setSearch] = useState(\"\");\n  const apiKey = \"5deA6LJCDuAav7Jui8AKzGMvHh3crT2j\";\n  const randomGifUrl = `https://api.giphy.com/v1/gifs/random?api_key=${apiKey}&tag=&rating=g`;\n\n  const searchGifUrl = (keyword) => {\n    return `https://api.giphy.com/v1/gifs/search?api_key=${apiKey}&q=${keyword}&limit=5&offset=0&rating=g&lang=en\n  `;\n  };\n  const generateRandom = () => {\n    fetch(randomGifUrl)\n      .then((response) => {\n        return response.json();\n      })\n      .then((myJson) => {\n        console.log(myJson);\n        setGif(myJson.data.images.original.url);\n      });\n  };\n\n  useEffect(() => {\n    generateRandom();\n  }, []);\n\n  const handleChange = (event) => {\n    setSearch(event.target.value);\n    console.log(search);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(search);\n    const newSearchUrl = searchGifUrl(search);\n    console.log(newSearchUrl);\n    fetch(newSearchUrl)\n      .then((response) => {\n        return response.json();\n      })\n      .then((myJson) => {\n        setGif(myJson.data[0].images.original.url);\n      });\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Giphy</h1>\n      <form onSubmit={handleSubmit}>\n        <input\n          name=\"search\"\n          type=\"text\"\n          value={search}\n          placeholder=\"Search gif\"\n          onChange={handleChange}\n        />\n        <input name=\"submit\" type=\"submit\" />\n      </form>\n      <input\n        name=\"randomSubmit\"\n        type=\"submit\"\n        value=\"Random Gif\"\n        onClick={generateRandom}\n      />\n      <br />\n      <img src={gif} alt=\"\" />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}