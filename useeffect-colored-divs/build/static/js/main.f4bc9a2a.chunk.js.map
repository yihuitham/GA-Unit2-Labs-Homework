{"version":3,"sources":["ColoredDiv.js","App.js","index.js"],"names":["ColoredDiv","props","styles","background","color","flex","width","style","className","App","useState","colors","setColors","setWidth","updateWidth","window","innerWidth","colorsArr","map","d","i","key","index","useEffect","addEventListener","onClick","console","log","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"qOAyBeA,G,MAtBI,SAACC,GAGlB,IAAIC,EAAS,CACXC,WAAYF,EAAMG,MAEnBC,KAAMJ,EAAMK,MAAM,KAAM,IAAI,KAG7B,OACE,oCACE,yBACEC,MAAOL,EACPM,UAAU,eAETP,EAAMG,MACP,8CCfO,SAASK,IACtB,MAA4BC,mBAAS,CAAC,aAAc,OAAQ,cAA5D,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA0BF,mBAAS,GAAnC,mBAAOJ,EAAP,KAAcO,EAAd,KAEMC,EAAc,WAClBD,EAASE,OAAOC,aAGZC,EAAYN,EAAOO,KAAI,SAACC,EAAGC,GAC/B,OAAO,kBAAC,EAAD,CAAYhB,MAAOe,EAAGE,IAAKD,EAAGE,MAAOF,EAAGd,MAAOA,OAaxD,OAJAiB,qBAAU,WACRR,OAAOS,iBAAiB,SAAUV,KAClC,IAGA,yBAAKN,UAAU,OACb,qDAA2BF,GAC3B,yBAAKE,UAAU,gBAAgBS,GAC/B,4BACAQ,QAfgB,WAClBb,EAAU,GAAD,mBAAKD,GAAL,CAAY,WACrBe,QAAQC,IAAIhB,KAYV,kBCzBN,IAAMiB,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACxB,EAAD,OAEFmB,I","file":"static/js/main.f4bc9a2a.chunk.js","sourcesContent":["// IMPORT useEffect\nimport React from \"react\";\n\nconst ColoredDiv = (props) => {\n  \n\n  let styles = {\n    background: props.color,\n   // add conditional logic here\n   flex: props.width>1023? \"1\":\"0\"\n  }\n  \n  return (\n    <>\n      <div \n        style={styles}\n        className=\"colored-div\"\n        >\n        {props.color}\n        <button>Remove</button>\n      </div>\n    </>\n  );\n}\n\nexport default ColoredDiv","import React, { useEffect, useState } from \"react\";\nimport \"./styles.css\";\nimport ColoredDiv from \"./ColoredDiv\";\n\nexport default function App() {\n  const [colors, setColors] = useState([\"lightgreen\", \"pink\", \"lightblue\"]);\n  const [width, setWidth] = useState(0);\n\n  const updateWidth = () => {\n    setWidth(window.innerWidth);\n  };\n\n  const colorsArr = colors.map((d, i) => {\n    return <ColoredDiv color={d} key={i} index={i} width={width}/>;\n  });\n\n  const addNewColor = () => {\n    setColors([...colors,\"white\"]);\n    console.log(colors);\n    \n  };\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", updateWidth);\n  },[]);\n\n  return (\n    <div className=\"App\">\n      <h1>Current Window Width: {width}</h1>\n      <div className=\"colored-divs\">{colorsArr}</div>\n      <button \n      onClick={addNewColor}\n      >Add New Color</button>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}